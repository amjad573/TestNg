<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Division Test"
           tests="7"
           failures="2"
           errors="0"
           skipped="0"
           time="0.064">
    <properties></properties>

            <testcase
                name="testDivision"
                time="0.023"
                classname="exampleTest">

            <failure type="java.lang.AssertionError" message="expected [10.0] but found [0.0]">
                <![CDATA[java.lang.AssertionError: expected [10.0] but found [0.0]
                org.testng.Assert.fail(Assert.java:110)org.testng.Assert.failNotEquals(Assert.java:1577)org.testng.Assert.assertEquals(Assert.java:866)org.testng.Assert.assertEquals(Assert.java:913)exampleTest.testDivision(exampleTest.java:30)java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)java.base/java.lang.reflect.Method.invoke(Method.java:578)org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)java.base/java.util.ArrayList.forEach(ArrayList.java:1511)org.testng.TestRunner.privateRun(TestRunner.java:829)org.testng.TestRunner.run(TestRunner.java:602)org.testng.SuiteRunner.runTest(SuiteRunner.java:437)org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </failure>
    </testcase>
            <testcase
                name="testDivision"
                time="0.001"
                classname="exampleTest">

            <failure type="java.lang.AssertionError" message="expected [10.0] but found [-0.0]">
                <![CDATA[java.lang.AssertionError: expected [10.0] but found [-0.0]
                org.testng.Assert.fail(Assert.java:110)org.testng.Assert.failNotEquals(Assert.java:1577)org.testng.Assert.assertEquals(Assert.java:866)org.testng.Assert.assertEquals(Assert.java:913)exampleTest.testDivision(exampleTest.java:30)java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)java.base/java.lang.reflect.Method.invoke(Method.java:578)org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)java.base/java.util.ArrayList.forEach(ArrayList.java:1511)org.testng.TestRunner.privateRun(TestRunner.java:829)org.testng.TestRunner.run(TestRunner.java:602)org.testng.SuiteRunner.runTest(SuiteRunner.java:437)org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </failure>
    </testcase>


            <testcase
                name="testDivision"
                time="0.031"
                classname="exampleTest">
            </testcase>
            <testcase
                name="testDivision"
                time="0.001"
                classname="exampleTest">
            </testcase>
            <testcase
                name="testDivision"
                time="0.001"
                classname="exampleTest">
            </testcase>
            <testcase
                name="testDivision"
                time="0.002"
                classname="exampleTest">
            </testcase>
            <testcase
                name="testInvalidDivision"
                time="0.005"
                classname="exampleTest">
            </testcase>
</testsuite>
